---
title: ""
format:
  html:
    theme: lumen
    page-layout: full
    self-contained: true
    code-fold: true
    code-overflow: wrap
    html-math-method: mathjax
    include-after-body:
      text: |
        <script>
          document.addEventListener("DOMContentLoaded", function () {
              var toc = document.createElement("div");
              toc.id = "custom-toc";
              toc.style.position = "fixed";
              toc.style.top = "0";
              toc.style.right = "-300px";  // Start hidden
              toc.style.width = "260px";
              toc.style.height = "100%";
              toc.style.background = "white";
              toc.style.padding = "10px";
              toc.style.boxShadow = "0px 2px 5px rgba(0, 0, 0, 0.2)";
              toc.style.transition = "right 0.3s ease-in-out";
              toc.style.overflowY = "auto";
          
              var tocTitle = document.createElement("h3");
              tocTitle.innerText = "Navigation";
              toc.appendChild(tocTitle);
          
              var headers = document.querySelectorAll("h2, h3, h4");
              headers.forEach(function (header, index) {
                  if (!header.id) {
                      header.id = "section-" + index;
                  }
          
                  var link = document.createElement("a");
                  link.innerText = header.innerText;
                  link.href = "#" + header.id;
                  link.style.display = "block";
                  link.style.padding = "5px 0";
                  link.style.color = "#007bff";
                  link.style.textDecoration = "none";
          
                  toc.appendChild(link);
              });
          
              document.body.appendChild(toc);
          
              // Create toggle button (ðŸ“‘ icon)
              var button = document.createElement("button");
              button.id = "toggle-toc";
              button.innerHTML = "ðŸ“‘";
              button.style.position = "fixed";
              button.style.top = "15px";
              button.style.right = "15px";
              button.style.backgroundColor = "white";
              button.style.color = "#333";
              button.style.border = "2px solid #ccc"; // Slightly thicker border
              button.style.padding = "10px 12px"; // Increased padding
              button.style.cursor = "pointer";
              button.style.borderRadius = "8px"; // More rounded
              button.style.fontSize = "22px"; // Larger icon
              button.style.zIndex = "1000";
              button.style.boxShadow = "0px 3px 6px rgba(0, 0, 0, 0.2)";
              button.style.width = "50px"; // Increase button size
              button.style.height = "50px"; // Make it square
          
              document.body.appendChild(button);
          
              // Click event to toggle the ToC
              button.addEventListener("click", function () {
                  if (toc.style.right === "0px") {
                      toc.style.right = "-300px"; // Hide ToC
                  } else {
                      toc.style.right = "0px"; // Show ToC
                  }
              });
          });
          document.addEventListener("DOMContentLoaded", function () {
              document.querySelectorAll("a[href='https://favstats.github.io/de25/']").forEach(function(link) {
                  link.addEventListener("click", function(event) {
                      event.preventDefault(); // Prevent default behavior
                      window.open(link.href, "_blank"); // Open in a new tab/window
                  });
              });
          });
        </script>
    includes:
      in-header: |
        <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

---


```{r setup, include=FALSE}
# here::i_am("wtm_gb.Rproj")

## Global options
knitr::opts_chunk$set(
  cache = F,
  echo = F,
  warning = F,
  message = F,
  cache.lazy = FALSE
)
```


```{css, echo = F, message=F, warning=F}
.highcharts-container {
  height: 100vh !important;
  width: 100vw !important;
}

        .button-container {
            text-align: center;
            margin-top: 20px;
        }
        
        .show-data-btn {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #007bff; /* Blue shade */
            color: white;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s ease, transform 0.2s ease;
            box-shadow: 0 2px 4px rgba(0, 123, 255, 0.5); /* Add some shadow for depth */
        }

        .show-data-btn:hover, .show-data-btn:focus {
            background-color: #0056b3; /* Darker blue on hover/focus */
            transform: translateY(-2px); /* Slight raise effect */
            box-shadow: 0 4px 6px rgba(0, 123, 255, 0.6); /* Enhanced shadow on hover/focus */
        }

        .show-data-btn:active {
            background-color: #004089; /* Even darker blue on active/click */
            transform: translateY(1px); /* Press down effect */
            box-shadow: 0 2px 3px rgba(0, 123, 255, 0.5); /* Subdued shadow to simulate press */
        }
```




```{r cars, echo = F, message=F, warning=F}
library(highcharter)
library(tidyverse)
library(reactable)
library(reactablefmtr)





totpop <- readRDS("../data/statepop.rds")

# totpop$full

all_dat <- readRDS("../data/all_data.rds")

all_reports <- dir("../current/regions", full.names = T) %>% 
  # as_tibble() %>% 
  map_dfr(~{read_csv(.x) %>% mutate(path = .x)}) %>% 
  mutate(state = str_extract(path, paste0(totpop$full, collapse = "|"))) %>% 
  janitor::clean_names() %>% 
  mutate(amount_spent = readr::parse_number(amount_spent_usd)) %>% 
            mutate(amount_spent = ifelse(amount_spent == 100, 1, amount_spent)) %>% 
  drop_na(state) %>% 
  filter(page_id %in% all_dat$page_id)


# ncavc %>% 
#   arrange(desc(spn_per_capita))


options(scipen = 999)
# fin_spend <- fin_spend %>%
#   mutate(perc = exp(dollar_spend)/sum(exp(dollar_spend))*100) %>% 
#   arrange(desc(perc)) %>% 
#   mutate(perc = round(perc,2))

# spend_reports %>% 
#   arrange(desc(dollar_spend))


```


```{r, echo = F, message=F, warning=F}

library(highcharter)
        # align: 'right',
        # verticalAlign: 'middle',
        # width: '200%',

        # width: 400,
        # floating: true,
        # align: 'left',
        # x: 70, // = marginLeft - default spacingLeft
        # itemWidth: 100,
        # borderWidth: 1
library(highcharter)
library(dplyr)
library(glue)
library(readr)

# Get data range for color scaling
library(highcharter)
library(dplyr)

ncavc <- all_reports %>% 
  group_by(state) %>% 
  summarize(dollar_spend = sum(amount_spent)) %>% 
  arrange(desc(dollar_spend))%>% 
  mutate(full = state) %>% 
  left_join(
    totpop 
  )  %>% 
  mutate(spn_per_capita = dollar_spend/pop_2022*1000) %>% 
  # filter(cntry %in% eu_countries) %>% 
  mutate(perc = dollar_spend/sum(dollar_spend)*100) %>% 
  mutate(perc = round(perc,2)) #%>% 
   
# Clip extremes at 5th and 95th percentile and log-transform
spn_cap_p05 <- quantile(ncavc$spn_per_capita, 0.01, na.rm = TRUE)
spn_cap_p95 <- quantile(ncavc$spn_per_capita, 0.99, na.rm = TRUE)
# Log-transform and normalize for color
ncavc <- ncavc %>%
  mutate(
    spn_per_capita_log = log(spn_per_capita),
    spn_per_capita_raw = spn_per_capita
  ) %>% 
  filter(full != "Puerto Rico")


ncavc <- ncavc %>%
    mutate(
        abbr = toupper(abbr),
        spn_per_capita_clipped = pmin(pmax(spn_per_capita, spn_cap_p05), spn_cap_p95),
        spn_per_capita_log = log(spn_per_capita)
    )


# Define a color gradient with better perceptual contrast
color_stops <- list(
  list(0.0, "#fff3e0"),  # light peach
  list(0.2, "#ffcc80"),  # soft orange
  list(0.4, "#ff8c42"),  # tangelo
  list(0.6, "#b667b0"),  # soft purple
  list(0.8, "#8e44ad"),  # deep violet
  list(1.0, "#5e3370")   # eggplant
)

hcmap(
  map = "countries/us/us-all",
  data = ncavc,
  joinBy = c("postal-code", "abbr"),
  value = "spn_per_capita_log",
  borderColor = "#ffffff",
  borderWidth = 0.5,
  nullColor = "#f0f0f0",
  name = "Per Capita Ad Spend"
) %>%
  hc_colorAxis(
    stops = color_stops,
    labels = list(
      formatter = JS("function () {
        return 'â‚¬' + new Intl.NumberFormat('fr-FR').format(Math.exp(this.value).toFixed(0));
      }")
    )
  ) %>%
  hc_tooltip(formatter = JS("function () {
    return '<b>' + this.point.name + '</b><br>' +
           '<i>â‚¬' + new Intl.NumberFormat('fr-FR').format(Math.exp(this.point.value).toFixed(0)) +
           '</i> per 1000 inhabitants<br>' +
           '<i>$' + new Intl.NumberFormat('fr-FR').format(this.point.dollar_spend.toFixed(0)) +
           '</i> total in last 30 days (' + this.point.perc + '%)';
  }")) %>%
  hc_title(text = glue::glue("Political Ad Spend on Facebook and Instagram in Last 30 Days ({read_lines('last30days_string.txt')})")) %>%
  hc_caption(text = "Click on any state for more details. Use the dropdown to see individual dashboards.") %>%
  hc_legend(enabled = TRUE, layout = "horizontal", align = "center")


# ncavc %>% 
#   arrange(dollar_spend)
```





```{r}
 # election_dat30 %>%
  # select(-type) %>% 
  # # filter(dollar_spend >= 1000) %>% 
  # # left_join(lts %>% select(-party, -page_name) %>% 
  # #             rename(internal_id = page_id), 
  # #           by = "internal_id") %>%
  # # mutate(type = str_remove_all(type, "Lijsttrekkers_")) %>% 
  # filter(cntry == "IT") %>% 
  # arrange(desc(dollar_spend)) %>% 
  # # filter(party == tp) %>%
  # # filter(main_currency == the_currency) %>%
  # distinct(internal_id, .keep_all = TRUE) %>%
  # arrange(desc(dollar_spend)) %>% 
  # slice(1:20)
```


```{=html}
<script>
document.addEventListener('DOMContentLoaded', function () {
  console.log('DOM fully loaded and parsed');

  // Hide all content initially
  document.querySelectorAll('.region-content').forEach(function(el) {
    el.style.display = 'none';
  });
  document.querySelectorAll('.party-content').forEach(function(el) {
    el.style.display = 'none';
  });
</script>
```
```{=html}
<style>
body, html {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

.highcharts-container {
  width: 100% !important;
  height: 100% !important;
}

.highcharts-root {
  width: 100% !important;
  height: 100% !important;
}

.panel-tabset .tab-content {
  border-top: none; /* Adds a subtle top border */
  border-bottom: none; /* Adds a subtle top border */
  border-left: none; /* Adds a subtle top border */
  border-right: none; /* Adds a subtle top border */    
}


.panel-tabset {
  border-top: none; /* Adds a top border to the whole set for continuity */
}


/* CSS for the styled reactable */

/* Styles for the table container, title, and subtitle */
.styled-table {
  /* Center the table */
  margin: 0 auto;
  /* Reduce the table width */
  font-family: Karla, "Helvetica Neue", Helvetica, Arial, sans-serif;
}

/* CSS for the styled reactable */

/* Styles for the table container, title, and subtitle */
.styled-table {
  /* Center the table */
  margin: 0 auto;
  /* Reduce the table width */
  font-family: Karla, "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.header {
  border-bottom: 2px solid #555;
  font-size: 0.8125rem;
  font-weight: 400;
  text-transform: uppercase;
}

.header:hover {
  background-color: #eee;
}

/* Styles for the bar charts */
.bar-cell {
  display: flex;
  align-items: center;
}

.number {
  font-family: "Fira Mono", Consolas, Monaco, monospace;
  font-size: 0.84375rem;
  white-space: pre;
}

.bar-chart {
  flex-grow: 1;
  margin-left: 0.375rem;
  height: 0.875rem;
}

.bar {
  height: 100%;
  background-color: #3fc1c9;
}

.number-cell {
  text-align: right;
  font-family: monospace;
}

.type-cell {
  text-align: left;
  padding-left: 1rem;
}

.styled-table a {
  color: inherit;
  text-decoration: none;
}

.styled-table a:hover,
.styled-table a:focus {
  text-decoration: underline;
  text-decoration-thickness: max(1px, 0.0625rem);
}

.panel-tabset .tab-content {
  border-top: none; /* Adds a subtle top border */
  border-bottom: none; /* Adds a subtle top border */
  border-left: none; /* Adds a subtle top border */
  border-right: none; /* Adds a subtle top border */
}

.nav-tabs {
  border-top: none; /* Adds a subtle top border */
  border-bottom: none; /* Adds a subtle top border */
  border-left: none; /* Adds a subtle top border */
  border-right: none; /* Adds a subtle top border */
}

</style>


```










